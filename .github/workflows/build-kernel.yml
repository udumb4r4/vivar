- name: Load env file into GITHUB_ENV
        run: |
          set -euo pipefail
          # candidate locations (relative to repo root)
          CANDIDATES=(
            ".github/workflows/envs/kernel.env"
            ".github/workflows/kernel.env"
            "kernel.env"
            ".github/workflows/envs/kernel.env.bak"
          )
          FOUND=""
          echo "Looking for env file in candidates:"
          for p in "${CANDIDATES[@]}"; do
            echo " - $p"
            if [ -f "$p" ]; then
              FOUND="$p"
              break
            fi
          done
          if [ -z "$FOUND" ]; then
            echo "Env file not found in any candidate path"
            echo "Repository tree (top-level .github/workflows):"
            ls -la .github/workflows || true
            echo "Repository root listing:"
            ls -la . || true
            exit 1
          fi
          echo "Using env file: $FOUND"
          # load file safely: skip blank lines and comments
          while IFS= read -r line || [ -n "$line" ]; do
            case "$line" in
              ''|\#*) continue ;;
            esac
            name="${line%%=*}"
            value="${line#*=}"
            expanded="$(eval "echo \"$value\"")"
            echo "${name}=${expanded}" >> "$GITHUB_ENV"
          done < "$FOUND"
          # runtime-derived values
          echo "KERNEL_DIR=${GITHUB_WORKSPACE}" >> "$GITHUB_ENV"
          # if OUT_DIR was specified relative, expand to workspace
          if [ -z "${OUT_DIR:-}" ]; then
            echo "OUT_DIR=${GITHUB_WORKSPACE}/out" >> "$GITHUB_ENV"
          else
            echo "OUT_DIR=${GITHUB_WORKSPACE}/${OUT_DIR}" >> "$GITHUB_ENV"
          fi
          echo "ANYKERNEL_DIR=${GITHUB_WORKSPACE}/${ANYKERNEL_DIR:-AnyKernel3}" >> "$GITHUB_ENV"
          TS=$(date +%Y%m%d_%H%M%S)
          LOG_PREFIX=${LOG_PREFIX:-build_log_${DEVICE:-kernel}}
          echo "LOG_FILE=${GITHUB_WORKSPACE}/${LOG_PREFIX}_${TS}.txt" >> "$GITHUB_ENV"